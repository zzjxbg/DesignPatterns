将一个复杂对象的构建与表示分离,使得同样的构建过程可以创建不同的表示
    -分离了部件的构造(由Builder来负责)和装配(由Director负责). 从而可以构造出复杂的对象.
     这个模式适用于：某个对象的构建过程复杂的情况
    -由于实现了构建和装配的解耦.不同的构建器,相同的装配,也可以做出不同的对象;相同的构建器,
     不同的装配顺序也可以做出不同的对象.也就是实现了构建算法、装配算法的解耦,实现了更好的复用.
    -用户只需要指定复杂对象的类型就可以得到该对象，而无须知道其内部的具体构造细节.

    -主要角色:
       -抽象建造者类(Builder):这个接口规定要实现复杂对象的那些部分的创建,并不涉及具体的部件对象的创建
       -具体建造者类(ConcreteBuilder):实现Builder接口,完成复杂产品的各个部件的具体创建方法.
                                      在构造过程完成后，提供产品的实例.
       -产品类(Product):要创建的复杂对象.
       -指挥者类(Director):调用具体建造者来创建复杂对象的各个部分,在指导者中不涉及具体产品的信息,
                           只负责保证对象各部分完整创建或按某种顺序创建.

