桥接模式:将抽象与实现分离,使它们可以独立变化.它是用组合关系代替继承关系来实现,
         从而降低了抽象和实现这两个可变维度的耦合度.

  -主要角色:
     -抽象化角色:定义抽象类,并包含一个对实现化对象的引用.
     -扩展抽象化角色:是抽象化角色的子类,实现父类中的业务方法,并通过组合关系调用实现化角色中的业务方法.
     -实现化角色:定义实现化角色的接口,供扩展抽象化角色调用.
     -具体实现化角色:给出实现化角色接口的具体实现.

  -优点:
     -提高了系统的可扩充性,在两个变化维度中任意扩展一个维度,都不需要修改原有系统
     -实现细节对客户透明

  -使用场景:
     -当一个类存在两个独立变化的维度,且这两个维度都需要进行扩展时
     -当一个系统不希望使用继承或因为多层次继承导致系统类的个数急剧增加时(类爆炸)
     -避免在两个层次之间建立静态的继承联系,通过桥接模式可以使它们在抽象层建立一个关联关系.